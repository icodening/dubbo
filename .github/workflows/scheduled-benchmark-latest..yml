name: Scheduled Benchmark Latest
on:
#  schedule:
##    - cron: '*/30 * * * *'
#    - cron: '0 0 * * *'
  push:
    branches:
      - benchmark-proposal
  workflow_dispatch:

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write
jobs:
  build-source:
    name: "Build Dubbo"
    runs-on: ubuntu-latest
    outputs:
      #e.g. 3.1.1  3.2.1  3.3.1
      version: ${{ steps.dubbo-version.outputs.version }}
      #e.g. 3.1  3.2  3.3
      minor-version: ${{ steps.dubbo-version.outputs.minor-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          path: dubbo
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
      - uses: actions/cache@v3
        name: "Cache local Maven repository"
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-
      - name: "Dubbo cache"
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository/org/apache/dubbo
          key: ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}-${{ github.run_id }}
      - name: "Build Dubbo with Maven"
        run: |
          cd ./dubbo
          ./mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress --fail-fast clean source:jar install -Pjacoco,checkstyle -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.test.skip=true -Dmaven.test.skip.exec=true -DembeddedZookeeperPath=${{ github.workspace }}/.tmp/zookeeper

      - name: "Calculate Dubbo Version"
        id: dubbo-version
        run: |
          REVISION=`awk '/<revision>[^<]+<\/revision>/{gsub(/<revision>|<\/revision>/,"",$1);print $1;exit;}' ./dubbo/pom.xml`
          echo "version=$REVISION" >> $GITHUB_OUTPUT
          echo "minor-version=$REVISION" | awk -F '.' '{print $1"."$2}' >> $GITHUB_OUTPUT
          echo "dubbo version: $REVISION"


  benchmark-triple:
    name: benchmark
    needs: [build-source]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        id: checkout-dubbo-benchmark
        with:
          repository: 'icodening/dubbo-benchmark'
          ref: benchmark-proposal
          token: ${{ secrets.BENCHMARK }}
      - name: "Cache local Maven repository"
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-
      - name: "Restore Dubbo cache"
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository/org/apache/dubbo
          key: ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}
            ${{ runner.os }}-dubbo-snapshot-
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Setup dubbo version
        run: |
          bash ./prepare.sh ${{ needs.build-source.outputs.version }}

      - name: Run benchmark for triple-server
        run: |
          bash ./benchmark.sh -m profiling dubbo-triple-server & sleep 60

      - name: Run benchmark for triple-client
        run: |
          bash ./benchmark.sh -m profiling dubbo-triple-client

      - name: Checkout benchmark result
        run: |
          mkdir -p benchmark/dubbo-triple-client/${{ needs.build-source.outputs.minor-version }}/ && mv *.json benchmark/dubbo-triple-client/${{ needs.build-source.outputs.minor-version }}/
          mkdir -p profiling/dubbo-triple-client/${{ needs.build-source.outputs.minor-version }}/ && mv dubbo-triple-client/*.jfr profiling/dubbo-triple-client/${{ needs.build-source.outputs.minor-version }}/
          mkdir -p profiling/dubbo-triple-server/${{ needs.build-source.outputs.minor-version }}/ && mv dubbo-triple-server/*.jfr profiling/dubbo-triple-server/${{ needs.build-source.outputs.minor-version }}/
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout --orphan benchmark-result
          git fetch origin benchmark-result
          git rm -rf .
          git pull origin benchmark-result
          git add ./benchmark
          git add ./profiling
          git commit -m "Add benchmark result"

      - name: Push branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.BENCHMARK }}
          branch: benchmark-result
          repository: icodening/dubbo-benchmark
