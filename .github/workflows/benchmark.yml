name: Benchmark
on:
  push:
    branches:
      - benchmark-proposal
permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write
jobs:
#  build-source:
#    name: "Build Dubbo"
#    runs-on: ubuntu-latest
#    outputs:
#      version: ${{ steps.dubbo-version.outputs.version }}
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          path: dubbo
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 8
#      - uses: actions/cache@v3
#        name: "Cache local Maven repository"
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.run_id }}
#          restore-keys: |
#            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#            ${{ runner.os }}-maven-
#      - name: "Dubbo cache"
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository/org/apache/dubbo
#          key: ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}-${{ github.run_id }}
#      - name: "Build Dubbo with Maven"
#        run: |
#          cd ./dubbo
#          ./mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress --fail-fast clean source:jar install -Pjacoco,checkstyle -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.test.skip=true -Dmaven.test.skip.exec=true -DembeddedZookeeperPath=${{ github.workspace }}/.tmp/zookeeper
#
#      - name: "Calculate Dubbo Version"
#        id: dubbo-version
#        run: |
#          REVISION=`awk '/<revision>[^<]+<\/revision>/{gsub(/<revision>|<\/revision>/,"",$1);print $1;exit;}' ./dubbo/pom.xml`
#          echo "version=$REVISION" >> $GITHUB_OUTPUT
#          echo "dubbo version: $REVISION"


  benchmark-triple:
    name: benchmark
#    needs: [build-source]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        id: checkout-dubbo-benchmark
        with:
          repository: 'icodening/dubbo-benchmark'
          ref: benchmark-proposal
#      - name: "Cache local Maven repository"
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.run_id }}
#          restore-keys: |
#            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#            ${{ runner.os }}-maven-
#      - name: "Restore Dubbo cache"
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository/org/apache/dubbo
#          key: ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}-${{ github.run_id }}
#          restore-keys: |
#            ${{ runner.os }}-dubbo-snapshot-${{ github.sha }}
#            ${{ runner.os }}-dubbo-snapshot-
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Setup dubbo version
        run: |
          bash ./prepare.sh 3.2.11
#          bash ./prepare.sh ${{ needs.build-source.outputs.version }}

      - name: Run benchmark for triple-server
        run: |
          bash ./benchmark.sh dubbo-triple-server & sleep 60

      - name: Run benchmark for triple-client
        run: |
          bash ./benchmark.sh dubbo-triple-client

      - name: Checkout benchmark result
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout --orphan benchmark-result
          git fetch origin benchmark-result
          git rm -rf .
          git pull origin benchmark-result --ff-only
          git add ./benchmark
          git commit -m "Add benchmark result"
          git pull origin benchmark-result

      - name: Push branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用内置的 GITHUB_TOKEN 授权
          branch: benchmark-result  # 推送的分支名称，应与之前创建的 orphan 分支名称相匹配
#          repository: icodening/dubbo-benchmark
#          force: false  # 强制推送，以确保远程分支与本地分支同步

#      - name: Store benchmark result
#        uses: benchmark-action/github-action-benchmark@v1
#        with:
#          name: JMH Benchmark
#          tool: 'jmh'
#          output-file-path: jmh_result.json
#          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t/github-action-not-triggering-gh-pages-upon-push/16096
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          auto-push: true
#          # Show alert with commit comment on detecting possible performance regression
#          alert-threshold: '200%'
#          comment-on-alert: true
#          fail-on-alert: true
